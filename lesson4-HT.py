# 1. Дан список чисел. Необходимо вывести в отдельные списки (три списка пустых) такие числа:
# в первый добавляем все числа которые делятся на 2
# во второй - те которые делятся на три
# в третий - те которые не подходят под первые два условия

list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]              # Список

def sort_divider(list_0, divider):                    # Ф-ция получает параметры: список и делитель
    list_1 = list()                                   # Список внутри ф-ции
    for i in range(len(list_0)):                      # Цикл с переменной по длине полученного списка
        if int(list_0[i]) % divider == 0:             # Условие: если делится полученным делителем нацело
            list_1.append(list_0[i])                  # Добавляет элемент в список внутри ф-ции
    return list_1                                     # Возвращает новый список
print(sort_divider(list_a, 2), '- те, что делятся на 2, нацело')
                                                      # Печатает ф-цию с делителем 2
print(sort_divider(list_a, 3), '- те, что делятся на 3, нацело')
                                                      # Печатает ф-цию с делиьелем 3
print(list(set(list_a) - set(sort_divider(list_a, 2)) - set(sort_divider(list_a, 3))), '- остальные числа')
                                                      # Печатает список, полученный вычитанием,
                                                      # из исходного списка
                                                      # двух списков из функций с делителями 2 и 3,
                                                      # с преобразованием списков во множества
                                                      # для самого процесса вычитания


# 2. Пользователь вводит строку и символ (одну букву).
# Проверить есть ли в этой строке введенный символ.

str_a = input('Введите набор символов: ')               # Пользователь вводит строку с набором символов
str_b = input('Введите проверяемый символ: ')           # Пользователь вводит строку с идентификатором

def find_char(str_1, str_2):                            # Ф-ция получает два аргумента - строки
    list_chars = list(str_1)                            # Преобразовывает строку с набором символов в список,
                                                        # посимвольно
    res = 0                                             # Счетчик = 0
    for char in list_chars:                             # Цикл с переменной по элементам списка
        if str_2 == char:                               # Если символ  равен идентификатору:
            res += 1                                    # Увеличивает счетчик на 1
    if res > 0:                                         # Если счетчик стал больше 0:
        print('Да! Такой символ найден в Вашем наборе!')
                                                        # Печатает "Да"
    else:                                               # Если счетчик остался = 0:
        print('Нет! Такой символ не найден в Вашем наборе!')
                                                        # Печатает "Нет"

find_char(str_a, str_b)                                 # Вызывает ф-цию

# 3. Дан список. Найти произведение
# (перемножить) всех элементов списка.

list_a = [2, 2, 2, 2, 2]                               # Список

def composition(list_1):                               # Ф-ция получает список
    res = 1                                            # Начальный множитель равен 1
    for a in list_1:                                   # Цикл с переменной элементам списка:
        res *= a                                       # Перемножает элементы

    print(res)                                         # Печатает полученное произведение

composition(list_a)                                    # Вызывает ф-цию


# 4. Есть список элементов (могут быть строки, словари, числа и другие типы данных).
# Создать словарь в котором будут ключи имена типов данных и в значениях лежать
# сами значения в списке.
# Пример:
# [1,"2", {"123":123}, [1,2,3,4]]
# На выходе должно быть:
# {'list': [[1,2,3,4]], 'dict':[{"123":123}], 'int': [1], 'str': ["2"]}

list_a = [1,"2", {"123":123}, [1,2,3,4]]                # Список

def type_id(list_1):                                    # Ф-ция получает список

    dict_res = dict()                                   # Словарь внутри ф-ции

    for a in list_1:                                    # Цикл с переменной по элементам списка
        if type(a) == list:                             # Если тип элемента - список:
            dict_res.update({'list' : a})               # Добавляет элемент в словарь, с ключём "список"
        elif type(a) == dict:                           # Если тип элемента - словарь:
            dict_res.update({'dict' : a})               # Добавляет элемент в словарь, с ключём "словарь"
        elif type(a) == int:                            # Если тип элемента - целое число:
            dict_res.update({'int': a})                 # Добавляет элемент в словарь, с ключём "целое число"
        elif type(a) == str:                            # Если тип элемента - строка:
            dict_res.update({'str' : a})                # # Добавляет элемент в словарь, с ключём "строка"
        else:                                           # В остальных случаях:
            dict_res.update({'other type' : a})         # # Добавляет элемент в словарь, как "другой тип"

    print(dict_res)                                     # Печатает словарь

type_id(list_a)                                         # Вызывает ф-цию
